name: CI - Test and Build

on:
  push:
    branches: [develop]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # Vote - Unit test
      - name: Vote - Prueba Unitaria & Cobertura
        working-directory: ./vote
        run: |
          pip install coverage
          coverage run --source=vote -m unittest tests/test_app.py
          coverage report
          coverage xml
        
      - name: Cargar cobertura Vote
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-vote
          path: ./vote/coverage.xml
      
      # Worker - Unit test
      - name: Worker - Prueba Unitaria & Cobertura
        working-directory: ./worker
        run: |
          npm ci
          npm test -- --coverage --coverageReporters=lcov

      - name: Cargar cobertura Worker
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-worker
          path: ./worker/coverage/lcov-report
      
      # Result - Unit test
      - name: Result - Prueba Unitaria & Cobertura
        working-directory: ./result
        run: |
          npm ci
          npm test -- --coverage --coverageReporters=lcov
      
      - name: Cargar cobertura Result
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-result
          path: ./result/coverage/lcov-report

  integration-tests:
    runs-on: ubuntu-latest
    needs: test-and-build

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Instalar jq para formatear JSON
        run: sudo apt-get update && sudo apt-get install -y jq
      
      - name: Ejecutar Docker Compose
        #run: docker compose -f docker-compose.yml up -d --wait
        run: docker compose -f docker-compose.yml up -d
      
      - name: Esperar a que los servicios estén listos
        run: |
          chmod +x ./scripts/wait-for-services.sh
          ./scripts/wait-for-services.sh

      #- name: Verificar estado de servicios (formato JSON)
      #  run: |
      #    echo "Estado de los servicios:"
      #    docker compose ps --format json | jq .

      - name: Asegurar permisos del script de integración
        run: chmod +x ./scripts/integrationTest.sh
      
      - name: Ejecutar pruebas de integración
        run: ./scripts/integrationTest.sh

      - name: Tear down
        if: always()
        run: docker compose down

