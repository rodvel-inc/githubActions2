#version: "3.9"

services:
  vote:
    image: rodvelinc/vote:latest
    ports:
      - "8080:80"
    env_file:
      - ./vote/.env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - voting-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  result:
    image: rodvelinc/result:latest
    ports:
      - "3010:3010"
    env_file:
      - ./result/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - voting-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3010/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  worker:
    image: rodvelinc/worker:latest
    env_file:
      - ./worker/.env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - voting-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  redis:
    image: redis:7
    container_name: redis
    networks:
      - voting-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    env_file:
      - ./postgres/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - voting-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  nginx:
      image: nginx:alpine
      container_name: nginx
      ports:
        - "80:80"
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/conf.d/vote.conf:ro
      depends_on:
        - vote
      command: /bin/sh -c "rm -f /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
      healthcheck:
        test: ["CMD", "wget", "-qO-", "http://localhost/health"]
        interval: 10s
        timeout: 3s
        retries: 3
      networks:
        - voting-net
volumes:
  postgres_data:
  
networks:
  voting-net:
    driver: bridge
